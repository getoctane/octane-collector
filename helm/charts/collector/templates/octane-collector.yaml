---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: octane-collector
  name: octane-collector

---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  labels:
    app: octane-collector
  name: octane-collector
rules:
  - apiGroups: [""]
    resources: ["pods", "nodes", "nodes/stats", "namespaces", "persistentvolumeclaims"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["metrics.k8s.io"]
    resources: ["pods", "nodes"]
    verbs: ["get", "list", "watch"]

---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  labels:
    app: octane-collector
  name: octane-collector
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: octane-collector
subjects:
  - kind: ServiceAccount
    name: octane-collector
    namespace: {{ .Values.namespace }}

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: octane-collector
  name: octane-collector
spec:
  selector:
    app: octane-collector
  ports:
    - protocol: TCP
      port: 8081
      targetPort: 8081

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: octane-collector
  name: octane-collector
spec:
  replicas: 1
  selector:
    matchLabels:
      app: octane-collector
  serviceName: octane-collector
  template:
    metadata:
      labels:
        app: octane-collector
    spec:
      serviceAccountName: octane-collector
      containers:
        - name: ledger
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: Always
          env:
            - name: LEDGER_HOST
              value: "{{ required ".Values.ledgerHost required" .Values.ledgerHost }}"
            - name: CLUSTER_KEY
              value: "{{ required ".Values.clusterKey required" .Values.clusterKey }}"
            - name: QUEUE_PUSH_INTERVAL_MINS
              value: "{{ .Values.queue.pushIntervalMinutes }}"
            - name: SURVEYING_INTERVAL_MINS
              value: "{{ .Values.surveyingIntervalMinutes }}"
            - name: METERING_INTERVAL_MINS
              value: "{{ .Values.meteringIntervalMinutes }}"
            - name: QUEUE_DIR
              value: /queue
            - name: KUBE_STATE_METRICS_HOST
              value: "http://kube-state-metrics.kube-system:8080"
            - name: ENABLE_K8S_METRICS_SURVEYOR
              value: "{{ .Values.enableK8SMetricsSurveyor }}"
          ports:
            - containerPort: 8081
          volumeMounts:
            - name: queue-data
              mountPath: /queue
  volumeClaimTemplates:
    - metadata:
        name: queue-data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: "10Gi"

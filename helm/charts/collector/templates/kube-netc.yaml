---
apiVersion: v1
kind: ServiceAccount
metadata:
  namespace: "{{ .Values.namespace }}"
  labels:
    name: kube-netc
  name: kube-netc

---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  namespace: "{{ .Values.namespace }}"
  name: kube-netc
subjects:
  - kind: ServiceAccount
    name: kube-netc
    namespace: "{{ .Values.namespace }}"
roleRef:
  kind: ClusterRole
  name: cluster-admin
  apiGroup: rbac.authorization.k8s.io

---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: kube-netc
  namespace: "{{ .Values.namespace }}"
spec:
  selector:
    matchLabels:
      name: kube-netc
  template:
    metadata:
      labels:
        name: kube-netc
    spec:
      serviceAccountName: kube-netc
      tolerations:
      - key: node-role.kubernetes.io/master
        effect: NoSchedule
      # This is a blanket ignore-all taints
      - operator: Exists
      containers:
      - name: kube-netc
        image: "{{ .Values.netc.image.repository }}:{{ .Values.netc.image.tag }}"
        args: ["-v", "info"]
        imagePullPolicy:  Always
        ports:
        - containerPort: 2112
          protocol: TCP
        - containerPort: 9655
          protocol: TCP
        resources: {}
        securityContext:
          privileged: true
        volumeMounts:
          - name: debug
            mountPath: /sys/kernel/debug
          - name: bpf
            mountPath: /sys/fs/bpf
          - name: cgroup
            mountPath: /sys/fs/cgroup
          - name: tmp
            mountPath: /tmp
      volumes:
      - name: bpf
        hostPath:
          path: /sys/fs/bpf
      - name: cgroup
        hostPath:
          path: /sys/fs/cgroup
      - name: debug
        hostPath:
          path: /sys/kernel/debug
      - name: tmp
        emptyDir: {}
      terminationGracePeriodSeconds: 10

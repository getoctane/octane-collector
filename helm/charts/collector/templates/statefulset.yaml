apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: octane-collector
  name: octane-collector
spec:
  replicas: 1
  selector:
    matchLabels:
      app: octane-collector
  serviceName: octane-collector
  template:
    metadata:
      labels:
        app: octane-collector
    spec:
      serviceAccountName: octane-collector
      containers:
      - name: ledger
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: Always
        env:
        - name: LEDGER_HOST
          value: "{{ required ".Values.ledgerHost required!" .Values.ledgerHost }}"
        - name: CLUSTER_KEY
          value: "{{ required ".Values.clusterKey required!" .Values.clusterKey }}"
        - name: PROMETHEUS_HOST
          value: "{{ .Values.prometheusHost }}"
        - name: QUEUE_PUSH_INTERVAL_MINS
          value: "{{ .Values.queue.pushIntervalMinutes }}"
        - name: QUEUE_DIR
          value: /queue
        - name: ENABLE_K8S_METRICS_SURVEYOR
          value: "{{ .Values.enableK8SMetricsSurveyor }}"
        ports:
        - containerPort: 8081
        volumeMounts:
        - name: queue-data
          mountPath: /queue
  volumeClaimTemplates:
  - metadata:
      name: queue-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: "{{ required ".Values.queue.storageClassName required!" .Values.queue.storageClassName }}"
      resources:
        requests:
          storage: "{{ required ".Values.queue.sizeGB required!" .Values.queue.sizeGB }}Gi"
